kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/maximilianoPizarro/botpress-server-v12'
    deployment.kubernetes.io/revision: '4'
  name: botpress-server
  labels:
    app: botpress-server
    app.kubernetes.io/component: botpress-server
    app.kubernetes.io/instance: botpress-server
    app.kubernetes.io/name: botpress-server
    app.kubernetes.io/part-of: botpress-server
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: '12.18'
spec:
  replicas: 0
  selector:
    matchLabels:
      app: botpress-server
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: botpress-server
        app.openshift.io/runtime: nodejs
        app.openshift.io/runtime-version: '12.18'
        deployment: botpress-server
    spec:
      containers:
        - name: botpress-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
